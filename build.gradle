plugins {
	id 'org.springframework.boot' version '2.7.1'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'org.openjfx.javafxplugin' version "0.0.11"
	id 'application'
	id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '16'

repositories {
	mavenCentral()
}

application {
	mainClassName = "bookreader.Main"
}

javafx {
	version = "18.0.1"
	modules = [ 'javafx.controls', 'javafx.fxml', 'javafx.swing', 'javafx.media', 'javafx.graphics' ]
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'

	implementation 'net.rgielen:javafx-weaver-spring-boot-starter:1.3.0'

	implementation 'org.openjfx:javafx-controls:18.0.1'
	implementation 'org.openjfx:javafx-fxml:18.0.1'
	implementation 'org.openjfx:javafx-swing:18.0.1'
	implementation 'org.openjfx:javafx-media:18.0.1'
	implementation 'org.openjfx:javafx-graphics:18.0.1'

	implementation 'com.github.sarxos:webcam-capture:0.3.12'

	implementation 'net.sourceforge.tess4j:tess4j:5.2.1'

	implementation platform('com.google.cloud:libraries-bom:26.0.0')
	implementation 'com.google.cloud:google-cloud-texttospeech'

	implementation 'net.sf.sociaal:freetts:1.2.2'
	implementation 'org.jetbrains:annotations:20.1.0'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.assertj:assertj-core:3.23.1'
	testImplementation 'org.mockito:mockito-core:4.6.1'
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	reports {
		xml.required = false
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
}
